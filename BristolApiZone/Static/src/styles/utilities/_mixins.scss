// --------------------------------------------------------------------------
// Mixins
// --------------------------------------------------------------------------

// Breakpoint for media
// --------------------------------------------------------------------------

@mixin bp($point) {
    @media (min-width: $point) {
        @content;
    }
}

@mixin print {
	@media print {
		@content;
	}
}

@mixin print-hide {
	@media print {
		display:none !important;
		height:0 !important;
		overflow:hidden  !important;
	}
}

@mixin container {
    margin: 0 auto;

    @media (min-width: $screen-xl-min) {
        max-width: $container-max-width;
    }

    @include print {
    	width: 95%;
    }
}

@mixin row {
    @extend %clearfix;
    padding: 0 20px;
}


// Box model
// --------------------------------------------------------------------------

@mixin box-sizing-fallback($args: border-box) {
	box-sizing: $args;

	*behavior: url(/src/scripts/plugins/boxsizing.htc);
}


// Hide text/els
// --------------------------------------------------------------------------

@mixin text-off-screen {
	text-indent: -999em;
}

@mixin el-off-screen {
	position: absolute;
	left: -999em;
}


// Inputs
// --------------------------------------------------------------------------

@mixin placeholder() {
	&.placeholder {
		@content;
	}
	&:-moz-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
}

@mixin appearance($value) {
    -webkit-appearance: $value;
    -moz-appearance: $value;
    appearance: $value;
}

// Rems with fallback
// --------------------------------------------------------------------------

@function calculateRem($size) {
	@return ($size / 16px) * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}


// Hacks & polyfills
// --------------------------------------------------------------------------

@mixin padding-hack-wrapper($width: 100, $svgWidth: 500, $svgHeight: 200) {
	position: relative;

	width: percentage($width / $width);
	height: 0;
	padding-top: (($svgHeight / $svgWidth) * $width) * 1%;
}

@mixin padding-hack-inner-el {
	position: absolute;
	top: 0;
	left: 0;

	width: 100%;
	height: 100%;
}


// Basic interactions
// --------------------------------------------------------------------------

@mixin hoverActiveFocus($property: visibility, $value: visible) {
	&:hover,
	&:active,
	&:focus {
		$property: $value;

		@content;
	}
}


// Positioning
// --------------------------------------------------------------------------

@mixin center($horizontal: true, $vertical: true) {
	@if $horizontal == true and $vertical == false {
		position: absolute;
		top: 0;
		left: 50%;

		transform: translateX(-50%);

		.lt-ie9 & {
			top: 0;
		}
	}
	@else if $horizontal == false and $vertical == true {
		position: absolute;
		top: 50%;
		left: 0;

		transform: translateY(-50%);

		.lt-ie9 & {
			top: 0;
		}
	}
	@else if $horizontal == true and $vertical == true {
		position: absolute;
		top: 50%;
		left: 50%;

		transform: translate(-50%, -50%);

		.lt-ie9 & {
			top: 0;
		}
	}
}


// Aspect Ratio
// https://css-tricks.com/snippets/sass/maintain-aspect-ratio-mixin/
// ----------------------------------------------------------------------

@mixin aspect-ratio($width, $height) {
    position: relative;

    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    > [class*="inner"] {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
}
